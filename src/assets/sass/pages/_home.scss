#home {
	

	.element-row {
		display: flex;
		gap: var(--size_rem_2);
		flex-wrap: wrap;
		align-items: center;

	}

	.container-text {
		display: flex;
		flex-direction: column;
		gap: var(--size_rem_2);
		@media screen and (min-width : v.$xl-breakpoint ) {
			flex-basis: 50%;
			}

	}
	.container-image {
		display: flex;
		justify-content: center;
		align-items: center;
		figure{
			margin: 0;
			padding: 0;
		}
		img{
			width: 70%;
			min-width: 350px;
		}
		@media screen and (min-width : v.$xl-breakpoint ) {
			flex-basis: 50%;
			img{
				width: 100%
			}
			}
	}

	.container {
		display: flex;
		flex-wrap: wrap;
		justify-content: flex-start;
		row-gap:var(--size_rem_4);
	}
	

	.svg-color {
		fill: var(--text_color02);

		path {
			fill: var(--text_color02);

		}
	}

	.tech-span {
		display: flex;
		align-items: center;
		column-gap: var(--size_rem_1);
	}





	.svg-wrap {
		display: flex;
		align-items: center;
		background-color: var(--background_color03);
		padding: var(--btn_padding01);
		border: var(--border_color01);
		border-radius: var(--size_rem_05);
		column-gap: var(--size_rem_1);
		cursor: pointer;
		p {
			font-size: var(--text_size_small01);
			color: var(--text_color01);
		}
	}

	p {
		font-size: var(--paragraph_size05);

		line-clamp: 2rem;
	}

	h1 {
		font-size: var(--title_size04);
		word-spacing: -1.2rem;
		font-family: 'Radio Canada', sans-serif;
		line-height: 1;

	}

	.gradient-text {
		background-color: rgb(26, 92, 179);
		background-image: linear-gradient(45deg, #3b6fb3, #5a42af);
		background-size: 100%;
		background-clip: text;
		background-repeat: repeat;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		-moz-background-clip: text;
		-moz-text-fill-color: transparent;
	}
}

.wave {
	animation-name: wave-animation;
	animation-duration: 2.5s;
	animation-iteration-count: infinite;
	transform-origin: 70% 70%;
	display: inline-block;
}

@keyframes wave-animation {
	0% {
		transform: rotate(0.0deg)
	}

	10% {
		transform: rotate(14.0deg)
	}

	20% {
		transform: rotate(-8.0deg)
	}

	30% {
		transform: rotate(14.0deg)
	}

	40% {
		transform: rotate(-4.0deg)
	}

	50% {
		transform: rotate(10.0deg)
	}

	60% {
		transform: rotate(0.0deg)
	}

	100% {
		transform: rotate(0.0deg)
	}
}